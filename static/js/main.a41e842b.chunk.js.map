{"version":3,"sources":["assets/moods/rad.svg","assets/moods/good.svg","assets/moods/meh.svg","assets/moods/bad.svg","assets/moods/awful.svg","styles/global.js","Components/MoodIcon/index.js","styles/colors.js","utils/getPredefinedName.js","pages/Home/styles.js","pages/Home/index.js","App.js","index.js"],"names":["module","exports","createGlobalStyle","moods","radMood","goodMood","mehMood","badMood","awfulMood","MoodIcon","groupId","size","src","alt","width","height","defaultProps","moodColors","getMoodColor","names","getPredefinedName","id","Container","styled","div","Content","Mood","li","props","color","Entrie","Home","useState","version","pin","isReminderOn","customMoods","dayEntries","daysInRowLongestChain","metadata","number_of_entries","created_at","data","setData","inputFile","useRef","onClick","current","click","type","ref","accept","onChange","e","reader","FileReader","onerror","alert","onabort","onload","result","response","JSON","parse","Base64","decode","err","readAsText","target","files","style","display","className","format","Date","map","mood","mood_group_id","key","predefined_name_id","custom_name","entrie","filter","m","tags","tag","t","name","datetime","join","note","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a41e842b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rad.b2271f4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/good.3e71333a.svg\";","module.exports = __webpack_public_path__ + \"static/media/meh.e90b4c45.svg\";","module.exports = __webpack_public_path__ + \"static/media/bad.aec34ea0.svg\";","module.exports = __webpack_public_path__ + \"static/media/awful.0fce98ba.svg\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background-color: #f0f0f5;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport radMood from '../../assets/moods/rad.svg';\nimport goodMood from '../../assets/moods/good.svg';\nimport mehMood from '../../assets/moods/meh.svg';\nimport badMood from '../../assets/moods/bad.svg';\nimport awfulMood from '../../assets/moods/awful.svg';\n\nconst moods = [radMood, goodMood, mehMood, badMood, awfulMood];\n\nfunction MoodIcon({ groupId, size }) {\n  function getMoodIcon() {\n    return moods[groupId - 1] || moods[0];\n  }\n\n  return <img src={getMoodIcon()} alt=\"MoodIcon\" width={size} height={size} />;\n}\n\nMoodIcon.propTypes = {\n  groupId: PropTypes.number.isRequired,\n  size: PropTypes.number,\n};\n\nMoodIcon.defaultProps = {\n  size: 40,\n};\n\nexport default MoodIcon;\n","const moodColors = ['#fd8d02', '#41a669', '#8f54a5', '#5579a6', '#707b7c'];\n\nexport function getMoodColor(groupId) {\n  return moodColors[groupId - 1] || moodColors[0];\n}\n","const names = ['rad', 'good', 'meh', 'bad', 'awful'];\n\nexport default function getPredefinedName(id) {\n  return names[id - 1] || names[0];\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1180px;\n  padding: 24px 32px;\n\n  margin: 0 auto;\n\n  > header {\n    display: flex;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n\n      margin-left: auto;\n      padding: 8px;\n      border-radius: 8px;\n      border: 0;\n\n      font-size: 14px;\n      font-weight: bold;\n      color: #fff;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  margin-top: 40px;\n\n  display: flex;\n\n  aside.geral {\n    width: 300px;\n\n    background: #fff;\n    padding: 30px;\n    border-radius: 5px;\n\n    div.moods {\n      margin-top: 20px;\n    }\n  }\n\n  section.entries {\n    width: 100%;\n    margin: 0 5px;\n\n    background: #fff;\n    padding: 30px;\n    border-radius: 5px;\n\n    ul {\n      display: grid;\n      grid-gap: 10px;\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n  }\n\n  @media (max-width: 1045px) {\n    section.entries {\n      ul {\n        grid-template-columns: 1fr 1fr;\n      }\n    }\n  }\n\n  @media (max-width: 730px) {\n    flex-direction: column;\n\n    aside.geral {\n      width: 100%;\n    }\n\n    section.entries {\n      margin: 5px 0;\n\n      ul {\n        grid-template-columns: 1fr;\n      }\n    }\n  }\n`;\n\nexport const Mood = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n\n  border: 2px solid ${(props) => props.color};\n  border-radius: 2.5px;\n\n  strong {\n    font-size: 18px;\n    margin-left: 7px;\n  }\n\n  & + li {\n    margin-top: 10px;\n  }\n`;\n\nexport const Entrie = styled.li`\n  display: flex;\n\n  padding: 10px;\n  border: 2px solid ${(props) => props.color};\n  border-radius: 2.5px;\n\n  div.infos {\n    margin-left: 7px;\n\n    header {\n      display: flex;\n      flex-direction: column;\n\n      time {\n        font-size: 12px;\n\n        opacity: 0.6;\n      }\n\n      div.mood {\n        time {\n          margin-left: 7px;\n          font-size: 11px;\n        }\n      }\n\n      strong {\n        color: ${(props) => props.color};\n        text-transform: uppercase;\n      }\n    }\n\n    span {\n      color: #333;\n\n      font-size: 12px;\n    }\n\n    p {\n      font-size: 14px;\n      line-height: 18px;\n\n      margin-top: 5px;\n      padding-top: 5px;\n      border-top: 1px solid #eee;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\n\nimport { Base64 } from 'js-base64';\n\nimport { format } from 'date-fns';\n\nimport MoodIcon from '../../Components/MoodIcon';\nimport { getMoodColor } from '../../styles/colors';\n\nimport getPredefinedName from '../../utils/getPredefinedName';\n\nimport { Container, Content, Mood, Entrie } from './styles';\n\nfunction Home() {\n  const [data, setData] = useState({\n    version: 0,\n    pin: 0,\n    isReminderOn: false,\n    customMoods: [],\n    dayEntries: [],\n    daysInRowLongestChain: 0,\n    metadata: {\n      number_of_entries: 0,\n      created_at: 0,\n    },\n  });\n\n  const inputFile = useRef();\n\n  function importDatabase(e) {\n    const reader = new FileReader();\n\n    reader.onerror = () => {\n      alert('Erro ao ler arquivo'); // eslint-disable-line no-alert\n    };\n\n    reader.onabort = () => {\n      alert('Erro ao ler arquivo'); // eslint-disable-line no-alert\n    };\n\n    reader.onload = () => {\n      const { result } = reader;\n\n      try {\n        const response = JSON.parse(Base64.decode(result));\n\n        setData(response);\n      } catch (err) {\n        alert('Código inválido!'); // eslint-disable-line no-alert\n      }\n    };\n\n    reader.readAsText(e.target.files[0]);\n  }\n\n  return (\n    <Container>\n      <header>\n        <button onClick={() => inputFile.current.click()} type=\"button\">\n          Import database\n        </button>\n\n        <input\n          type=\"file\"\n          ref={inputFile}\n          accept=\".daylio\"\n          onChange={importDatabase}\n          style={{ display: 'none' }}\n        />\n      </header>\n\n      <Content>\n        <aside className=\"geral\">\n          <ul className=\"infos\">\n            <li>\n              <strong>Entries: </strong>\n              <span>{data.metadata.number_of_entries}</span>\n            </li>\n            <li>\n              <strong>Sequence: </strong>\n              <span>{data.daysInRowLongestChain}</span>\n            </li>\n            <li>\n              <strong>Reminder: </strong>\n              <span>{data.isReminderOn ? 'On' : 'Off'}</span>\n            </li>\n            <li>\n              <strong>Password: </strong>\n              <span>{data.pin}</span>\n            </li>\n            <li>\n              <strong>Created at: </strong>\n              <span>\n                {format(new Date(data.metadata.created_at), 'MM/dd/yyyy')}\n              </span>\n            </li>\n            <li>\n              <strong>Version: </strong>\n              <span>{data.version}</span>\n            </li>\n          </ul>\n\n          <div className=\"moods\">\n            <h1>Moods</h1>\n\n            <ul>\n              {data.customMoods.map((mood) => (\n                <Mood color={getMoodColor(mood.mood_group_id)} key={mood.id}>\n                  <MoodIcon groupId={mood.mood_group_id} />\n\n                  {mood.predefined_name_id >= 1 ? (\n                    <strong>\n                      {getPredefinedName(mood.predefined_name_id)}\n                    </strong>\n                  ) : (\n                    <strong>{mood.custom_name}</strong>\n                  )}\n                </Mood>\n              ))}\n            </ul>\n          </div>\n        </aside>\n\n        <section className=\"entries\">\n          <ul>\n            {data.dayEntries.map((entrie) => {\n              // Mood Object\n              const [mood] = data.customMoods.filter(\n                (m) => m.id === entrie.mood\n              );\n\n              // Array with all tag names.\n              const tags = entrie.tags.map(\n                (tag) => data.tags.filter((t) => t.id === tag)[0].name\n              );\n\n              return (\n                <Entrie\n                  key={entrie.id}\n                  color={getMoodColor(mood.mood_group_id)}\n                >\n                  <MoodIcon groupId={mood.mood_group_id} />\n\n                  <div className=\"infos\">\n                    <header>\n                      <time>\n                        {format(\n                          new Date(entrie.datetime),\n                          'yyyy - EEEE, MMMM dd'\n                        )}\n                      </time>\n\n                      <div className=\"mood\">\n                        {mood.predefined_name_id >= 1 ? (\n                          <strong>\n                            {getPredefinedName(mood.predefined_name_id)}\n                          </strong>\n                        ) : (\n                          <strong>{mood.custom_name}</strong>\n                        )}\n\n                        <time>\n                          {format(new Date(entrie.datetime), 'hh:mm a')}\n                        </time>\n                      </div>\n                    </header>\n\n                    <span>{tags.join(', ')}</span>\n\n                    <p>{entrie.note}</p>\n                  </div>\n                </Entrie>\n              );\n            })}\n          </ul>\n        </section>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport GlobalStyle from './styles/global';\n\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <>\n      <Home />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}